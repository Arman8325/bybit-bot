import telebot
import os
from pybit.unified_trading import HTTP

bot = telebot.TeleBot(os.getenv("TELEGRAM_BOT_TOKEN"))
session = HTTP(
    api_key=os.getenv("BYBIT_API_KEY"),
    api_secret=os.getenv("BYBIT_API_SECRET")
)

def calculate_rsi(closes, period=14):
    if len(closes) < period + 1:
        return None
    gains = []
    losses = []
    for i in range(1, period + 1):
        delta = closes[i] - closes[i - 1]
        if delta > 0:
            gains.append(delta)
            losses.append(0)
        else:
            gains.append(0)
            losses.append(-delta)
    avg_gain = sum(gains) / period
    avg_loss = sum(losses) / period
    if avg_loss == 0:
        return 100
    rs = avg_gain / avg_loss
    return 100 - (100 / (1 + rs))

@bot.message_handler(commands=['start'])
def start_message(message):
    bot.send_message(message.chat.id, "‚úÖ –ë–æ—Ç –∞–∫—Ç–∏–≤–µ–Ω. –ò—Å–ø–æ–ª—å–∑—É–π /signal –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–∏–≥–Ω–∞–ª–∞.")

@bot.message_handler(commands=['signal'])
def get_signal(message):
    try:
        bot.send_message(message.chat.id, "‚è≥ –ü–æ–ª—É—á–∞—é –¥–∞–Ω–Ω—ã–µ –æ—Ç Bybit...")

        candles = session.get_kline(
            category="linear",
            symbol="BTCUSDT",
            interval="15",
            limit=100
        )

        data = candles.get("result", {}).get("list", [])
        if len(data) < 15:
            bot.send_message(message.chat.id, "‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö.")
            return

        closes = [float(c[4]) for c in data[-15:]]
        rsi = calculate_rsi(closes)

        last_close = closes[-1]
        prev_close = closes[-2]

        trend = "üî∫ LONG (–≤–≤–µ—Ä—Ö)" if last_close > prev_close else "üîª SHORT (–≤–Ω–∏–∑)"

        rsi_comment = (
            f"üìà RSI: {round(rsi, 2)} ‚Äì –ü–µ—Ä–µ–ø—Ä–æ–¥–∞–Ω üëá" if rsi < 30 else
            f"üìâ RSI: {round(rsi, 2)} ‚Äì –ü–µ—Ä–µ–∫—É–ø–ª–µ–Ω ‚òù" if rsi > 70 else
            f"‚ÑπÔ∏è RSI: {round(rsi, 2)} ‚Äì –ù–µ–π—Ç—Ä–∞–ª—å–Ω–æ ‚ûñ"
        )

        bot.send_message(message.chat.id, f"üìä –ó–∞–∫—Ä—ã—Ç–∏–µ: {last_close}\nüìâ –ü—Ä–µ–¥—ã–¥—É—â–µ–µ: {prev_close}\n{rsi_comment}\nüìå –°–∏–≥–Ω–∞–ª: {trend}")

    except Exception as e:
        bot.send_message(message.chat.id, f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {str(e)}")

bot.polling()
