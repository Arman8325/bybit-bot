import telebot
import os
from pybit.unified_trading import HTTP

# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏ –∫–ª—é—á–∏ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
TELEGRAM_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")
BYBIT_API_KEY = os.getenv("BYBIT_API_KEY")
BYBIT_API_SECRET = os.getenv("BYBIT_API_SECRET")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ —Å–µ—Å—Å–∏–∏ Bybit
bot = telebot.TeleBot(TELEGRAM_TOKEN)
session = HTTP(api_key=BYBIT_API_KEY, api_secret=BYBIT_API_SECRET)

# –ö–æ–º–∞–Ω–¥–∞ /start
@bot.message_handler(commands=['start'])
def start_message(message):
    bot.send_message(message.chat.id, "‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω! –ò—Å–ø–æ–ª—å–∑—É–π /signal, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—é.")

# –ö–æ–º–∞–Ω–¥–∞ /signal
@bot.message_handler(commands=['signal'])
def get_signal(message):
    try:
        bot.send_message(message.chat.id, "‚è≥ –ü–æ–ª—É—á–∞—é –¥–∞–Ω–Ω—ã–µ –æ—Ç Bybit...")

        candles = session.get_kline(
            category="linear", symbol="BTCUSDT", interval="15", limit=3
        )

        if not candles.get('result') or not candles['result'].get('list'):
            bot.send_message(message.chat.id, "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ —Å–≤–µ—á–∞—Ö.")
            return

        candle_list = candles['result']['list']
        if len(candle_list) < 2:
            bot.send_message(message.chat.id, "‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞.")
            return

        last = float(candle_list[-1][4])
        prev = float(candle_list[-2][4])
        direction = "üî∫ LONG (–≤–≤–µ—Ä—Ö)" if last > prev else "üîª SHORT (–≤–Ω–∏–∑)"

        bot.send_message(message.chat.id,
            f"üìä –ü–æ—Å–ª–µ–¥–Ω—è—è —Å–≤–µ—á–∞: {last}\nüìâ –ü—Ä–µ–¥—ã–¥—É—â–∞—è: {prev}\nüìà –°–∏–≥–Ω–∞–ª: {direction}"
        )
    except Exception as e:
        bot.send_message(message.chat.id, f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–∏–≥–Ω–∞–ª–∞:\n{str(e)}")

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.polling()

