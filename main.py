import telebot
import os
from pybit.unified_trading import HTTP
from datetime import datetime

bot = telebot.TeleBot(os.getenv("TELEGRAM_BOT_TOKEN"))

session = HTTP(
    api_key=os.getenv("BYBIT_API_KEY"),
    api_secret=os.getenv("BYBIT_API_SECRET")
)

@bot.message_handler(commands=['start'])
def start_handler(message):
    bot.send_message(message.chat.id, "‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω! –ò—Å–ø–æ–ª—å–∑—É–π /signal, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å–∏–≥–Ω–∞–ª –ø–æ —Ä—ã–Ω–∫—É.")

@bot.message_handler(commands=['signal'])
def signal_handler(message):
    try:
        bot.send_message(message.chat.id, "‚è≥ –ü–æ–ª—É—á–∞—é –¥–∞–Ω–Ω—ã–µ –æ—Ç Bybit...")

        candles = session.get_kline(category="linear", symbol="BTCUSDT", interval="15", limit=3)
        candle_list = candles['result']['list']

        if len(candle_list) < 2:
            bot.send_message(message.chat.id, "‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞.")
            return

        last_close = float(candle_list[-1][4])
        prev_close = float(candle_list[-2][4])

        direction = "üî∫ LONG (–≤–≤–µ—Ä—Ö)" if last_close > prev_close else "üîª SHORT (–≤–Ω–∏–∑)"

        bot.send_message(
            message.chat.id,
            f"üìä –ó–∞–∫—Ä—ã—Ç–∏–µ: {last_close}\n"
            f"üìâ –ü—Ä–µ–¥—ã–¥—É—â–µ–µ: {prev_close}\n"
            f"üìå –°–∏–≥–Ω–∞–ª: {direction}"
        )

    except Exception as e:
        bot.send_message(message.chat.id, f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–∏–≥–Ω–∞–ª–∞: {str(e)}")

bot.polling()
